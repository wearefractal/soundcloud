// Generated by CoffeeScript 1.6.1
var apiKey, cookie, getParam, soundcloud, tok;

cookie = require('cookie');

apiKey = null;

getParam = function(param) {
  var match, re, url;
  url = window.location.hash;
  re = new RegExp("#" + param + "=([^&]+)(&|$)");
  match = url.match(re);
  if (!((match != null) && (match[1] != null))) {
    return;
  }
  return match[1];
};

soundcloud = {
  base: "https://api.soundcloud.com",
  cookieName: "soundcloud_access_token",
  setKey: function(key) {
    return apiKey = key;
  },
  token: function() {
    return cookie(soundcloud.cookieName);
  },
  clearToken: function() {
    cookie(soundcloud.cookieName, null);
    return soundcloud;
  },
  setToken: function(val) {
    cookie(soundcloud.cookieName, val, {
      maxage: 604800000,
      path: '/'
    });
    return soundcloud;
  },
  authorize: function(cburl) {
    var uri;
    if (cburl == null) {
      cburl = window.location.origin;
    }
    uri = "" + soundcloud.base + "/connect/?response_type=token&scope=non-expiring&client_id=" + apiKey + "&redirect_uri=" + cburl;
    window.location.href = uri;
    return soundcloud;
  },
  makeRequest: function(path, opt, type, cb) {
    var header, qs, query, req, uri, value, _ref;
    if (opt == null) {
      opt = {};
    }
    query = function(queryObj) {
      var k, v;
      if (queryObj) {
        for (k in queryObj) {
          v = queryObj[k];
          return encodeURIComponent(k) + "=" + encodeURIComponent(v) + "&";
        }
      }
    };
    if (typeof opt === 'function' && !cb) {
      cb = opt;
      opt = {};
    }
    uri = "" + soundcloud.base + path;
    req = new XMLHttpRequest();
    qs = "";
    req.onreadystatechange = function() {
      if (req.readyState === 4 && req.status === 200) {
        return cb(null, req.responseText);
      }
    };
    if (opt.qs) {
      qs = query(opt.qs);
    }
    if (opt.headers) {
      _ref = opt.headers;
      for (header in _ref) {
        value = _ref[header];
        req.setRequestHeader(header, value);
      }
    }
    if (soundcloud.token()) {
      qs += query({
        oauth_token: soundcloud.token()
      });
    } else {
      qs += {
        client_id: apiKey
      };
    }
    qs += query({
      "_status_code_map[302]": 200,
      format: "json"
    });
    if (type === "get" && (qs != null)) {
      uri += "?" + qs;
    }
    req.open(type, uri, true);
    if (type === "post" && (qs != null)) {
      req.send(qs);
    } else {
      req.send();
    }
    return req;
  },
  get: function(path, opt, cb) {
    return soundcloud.makeRequest(path, opt, 'get', cb);
  },
  post: function(path, opt, cb) {
    return soundcloud.makeRequest(path, opt, 'post', cb);
  },
  put: function(path, opt, cb) {
    return soundcloud.makeRequest(path, opt, 'put', cb);
  },
  del: function(path, opt, cb) {
    return soundcloud.makeRequest(path, opt, 'del', cb);
  }
};

tok = getParam("access_token");

if (tok != null) {
  soundcloud.setToken(tok);
}

module.exports = soundcloud;
